// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shortUrl.proto

/*
Package shortUrl is a generated protocol buffer package.

It is generated from these files:
	shortUrl.proto

It has these top-level messages:
	CreateRequest
	CreateResponse
	QueryRequest
	QueryResponse
*/
package shortUrl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	Url     string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Express int64  `protobuf:"varint,2,opt,name=express" json:"express,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CreateRequest) GetExpress() int64 {
	if m != nil {
		return m.Express
	}
	return 0
}

type CreateResponse struct {
	Code    int32             `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type QueryRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *QueryRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type QueryResponse struct {
	Code    int32             `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QueryResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QueryResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
	proto.RegisterType((*QueryRequest)(nil), "QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "QueryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ShortUrl service

type ShortUrlClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
}

type shortUrlClient struct {
	cc *grpc.ClientConn
}

func NewShortUrlClient(cc *grpc.ClientConn) ShortUrlClient {
	return &shortUrlClient{cc}
}

func (c *shortUrlClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/ShortUrl/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shortUrlClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := grpc.Invoke(ctx, "/ShortUrl/Query", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShortUrl service

type ShortUrlServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
}

func RegisterShortUrlServer(s *grpc.Server, srv ShortUrlServer) {
	s.RegisterService(&_ShortUrl_serviceDesc, srv)
}

func _ShortUrl_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortUrlServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShortUrl/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortUrlServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShortUrl_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortUrlServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShortUrl/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortUrlServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShortUrl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ShortUrl",
	HandlerType: (*ShortUrlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ShortUrl_Create_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _ShortUrl_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shortUrl.proto",
}

func init() { proto.RegisterFile("shortUrl.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0xac, 0x9b, 0xa6, 0x90, 0x85, 0x04, 0xb4, 0xe2, 0x10, 0x72, 0x8a, 0x7c, 0x8a, 0x04, 0xf8,
	0x50, 0x0e, 0x20, 0x38, 0x02, 0x0f, 0xc0, 0x88, 0x07, 0x18, 0xba, 0x02, 0xa9, 0xa1, 0x09, 0xb6,
	0x83, 0xc8, 0x7f, 0x10, 0xef, 0x44, 0x71, 0x6b, 0x84, 0x91, 0xb8, 0xa0, 0xde, 0x76, 0xac, 0xdd,
	0xf1, 0xcc, 0xec, 0x42, 0x66, 0x9e, 0x1b, 0x6d, 0xef, 0x75, 0x2d, 0x5a, 0xdd, 0xd8, 0x86, 0x5f,
	0x42, 0x7a, 0xa5, 0x49, 0x59, 0x92, 0xf4, 0xda, 0x91, 0xb1, 0xb8, 0x0f, 0x51, 0xa7, 0xeb, 0x9c,
	0x95, 0xac, 0x4a, 0xe4, 0x50, 0x62, 0x0e, 0x5b, 0xf4, 0xde, 0x6a, 0x32, 0x26, 0x1f, 0x97, 0xac,
	0x8a, 0xa4, 0x87, 0xfc, 0x93, 0x41, 0xe6, 0xa7, 0x4d, 0xdb, 0x2c, 0x0d, 0x21, 0xc2, 0xe4, 0xb1,
	0x99, 0x93, 0x9b, 0x8f, 0xa5, 0xab, 0x07, 0x82, 0x17, 0x32, 0x46, 0x3d, 0x91, 0x23, 0x48, 0xa4,
	0x87, 0x78, 0x02, 0x93, 0xb9, 0xb2, 0x2a, 0x8f, 0xca, 0xa8, 0xda, 0x99, 0x1d, 0x8a, 0x90, 0x4c,
	0x5c, 0x2b, 0xab, 0x6e, 0x96, 0x56, 0xf7, 0xd2, 0xb5, 0x15, 0x67, 0x90, 0x7c, 0x3f, 0x0d, 0x42,
	0x17, 0xd4, 0x7b, 0xa1, 0x0b, 0xea, 0xf1, 0x00, 0xe2, 0x37, 0x55, 0x77, 0xfe, 0x97, 0x15, 0xb8,
	0x18, 0x9f, 0x33, 0x5e, 0xc2, 0xee, 0x6d, 0x47, 0xba, 0xff, 0xd3, 0x24, 0xff, 0x60, 0x90, 0xae,
	0x5b, 0xfe, 0xe5, 0xe4, 0x38, 0x70, 0x92, 0x8b, 0x80, 0x6b, 0x63, 0x46, 0x66, 0x0a, 0xb6, 0xef,
	0xd6, 0x0b, 0xc4, 0x23, 0x98, 0xae, 0xf2, 0xc2, 0x4c, 0x04, 0x3b, 0x2c, 0xf6, 0x7e, 0x05, 0xc9,
	0x47, 0x58, 0x41, 0xec, 0x24, 0x61, 0x2a, 0x7e, 0x26, 0x51, 0x64, 0xa1, 0x52, 0x3e, 0x7a, 0x98,
	0xba, 0xc3, 0x38, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x89, 0xbe, 0x75, 0x2a, 0x02, 0x00,
	0x00,
}
